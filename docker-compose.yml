version: '3'
services:
  tf-cpu-jupyter:
    build:
      dockerfile: Dockerfile.tf-cpu-jupyter
      context: docker
      args: 
        - UBUNTU_VERSION=18.04
        - TF_PACKAGE=tensorflow
        - TF_PACKAGE_VERSION=2.0.0a0
  tf-gpu-jupyter:
    build:
      dockerfile: Dockerfile.tf-gpu-jupyter
      context: docker
      args: 
        - UBUNTU_VERSION=18.04
        - TF_PACKAGE=tensorflow-gpu
        - TF_PACKAGE_VERSION=2.0.0a0
  ros-tf:
    build:
      dockerfile: Dockerfile.ros
      context: docker
      # args:
      #   - VARIANT=gpu
    depends_on:
      - tf-cpu-jupyter
      - tf-gpu-jupyter
  ros-app:
    build: .
    # command: ["bash"]
    # command: ["printenv", "|", "grep", "ROS", "&&", "python", "--version"]
    # command: python3 --version
    # command: printenv
    # command: /bin/bash
    # stdin_open: true
    # tty: true
    ports:
      - "11311:11311"
    volumes:
      # - /mnt/hgfs/VM-Shared/ros1/code:/code
      - ${PWD}/code:/code
    depends_on: 
      - ros-tf
  nvidia-vgl:
    build:
      context: ./nvidia-opengl/1.0-glvnd/runtime
      args:
        from: "plumbee/nvidia-virtualgl:latest"
  gazebo-nv:
    depends_on:
      - nvidia-vgl
    build: 
      context: ./gazebo-gl
      args:
        from: "${COMPOSE_PROJECT_NAME:-ros1}_nvidia-vgl:latest"
  gazebo-non-nv:
    build: 
      context: ./gazebo-gl
      args:
        from: "plumbee/nvidia-virtualgl:latest"
  test1:
    build:
      context: ./test1
      args:
        arg: "test_arg_1"
    environment:
      ENV1: "env_var1"
  